package main

import "fmt"

func main() {

	//冒泡排序 練習
	//24,69,80,57,13 小到大排序
	//有兩個指針，逐一往後

	//第一輪排序
	// +  !
	//24,69,80,57,13  第一次
	//    +  !
	//24,69,80,57,13  第二次
	//       +  !
	//24,69,57,80,13  第三次
	//          +  !
	//24,69,57,13,80  第四次

	//第二輪排序
	// +  !
	//24,69,57,13,80  第一次
	//    +  !
	//24,57,69,13,80  第二次
	//       +  !
	//24,57,13,69,80  第三次

	//第三輪排序
	// +  !
	//24,57,13,69,80  第一次
	//    +  !
	//24,13,57,69,80  第二次
	//第四輪排序
	// +  !
	//13,24,57,69,80  第一次
	arr := [5]int{24, 69, 80, 57, 13}
	bubbleSort(&arr)
}

func bubbleSort(arr *[5]int) {
	fmt.Println("排序前 = ", (*arr))
	temp := 0 //臨時變數
	//第一輪排序

	// for i := 0; i < len(*arr)-1; i++ {
	// 	if (*arr)[i] > (*arr)[i+1] {
	// 		temp = (*arr)[i]
	// 		(*arr)[i] = (*arr)[i+1]
	// 		(*arr)[i+1] = temp
	// 	}
	// }
	// fmt.Println("第一次排序後 = ", (*arr))
	// //第二輪排序
	// for i := 0; i < len(*arr)-2; i++ {
	// 	if (*arr)[i] > (*arr)[i+1] {
	// 		temp = (*arr)[i]
	// 		(*arr)[i] = (*arr)[i+1]
	// 		(*arr)[i+1] = temp
	// 	}
	// }
	// fmt.Println("第二次排序後 = ", (*arr))
	// //第三輪排序
	// for i := 0; i < len(*arr)-3; i++ {
	// 	if (*arr)[i] > (*arr)[i+1] {
	// 		temp = (*arr)[i]
	// 		(*arr)[i] = (*arr)[i+1]
	// 		(*arr)[i+1] = temp
	// 	}
	// }
	// fmt.Println("第三次排序後 = ", (*arr))
	// //第四輪排序
	// for i := 0; i < len(*arr)-4; i++ {
	// 	if (*arr)[i] > (*arr)[i+1] {
	// 		temp = (*arr)[i]
	// 		(*arr)[i] = (*arr)[i+1]
	// 		(*arr)[i+1] = temp
	// 	}
	// }
	// fmt.Println("第四次排序後 = ", (*arr))

	//重複的for 迴圈 可以進行優化
	//1. 一共會經過 len(arr)-1 輪比較
	for k := 0; k < len(*arr)-1; k++ {
		//2. 每輪的比較會逐漸變少 (4,3,2,1)   => len(*arr)-1-k
		for i := 0; i < len(*arr)-1-k; i++ {
			//交換
			if (*arr)[i] > (*arr)[i+1] {
				temp = (*arr)[i]
				(*arr)[i] = (*arr)[i+1]
				(*arr)[i+1] = temp
			}
		}
	}

	fmt.Println("排序後 = ", (*arr))

}

//冒泡排序法

//從後向前，最末元素跟相鄰元素比較，值較小就與前面位置交換，就像是氣泡逐漸上升，直到整個陣列的排序 由小到大  排序正確

//規律
//1. 一共會經過 len(arr)-1 輪比較，每輪確定一個數的位置
//2. 每輪的比較會逐漸變少 (4,3,2,1)
//3. 當前面的數比後面的大，就進行交換
